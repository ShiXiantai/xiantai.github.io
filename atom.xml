<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>脑洞星球</title>
  <icon>https://www.gravatar.com/avatar/c8305fc6885c456153d510e05276ff22</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-20T04:05:34.012Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Xiantaii Shi</name>
    <email>sxiantai@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/09/20/hello-world/"/>
    <id>http://yoursite.com/2018/09/20/hello-world/</id>
    <published>2018-09-20T04:05:34.012Z</published>
    <updated>2018-09-20T04:05:34.012Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>WEB前端JavaScript</title>
    <link href="http://yoursite.com/2018/08/30/JavaScript/"/>
    <id>http://yoursite.com/2018/08/30/JavaScript/</id>
    <published>2018-08-30T14:35:37.000Z</published>
    <updated>2018-09-20T06:06:51.647Z</updated>
    
    <content type="html"><![CDATA[<p><strong> WEB前端JavaScript：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>WEB前端<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><p>##JavaScript  简称JS</p><pre><code>html搭建页面结构和内容  CSS用来美化页面  JS给页面添加动态效果或显示动态内容</code></pre><p>###JS历史</p><pre><code>1995年由网景（NetScape）公司发布 LiveScript 同年改名为 JavaScript，和Java没啥关系主要为了蹭热度</code></pre><p>###JS特点</p><ul><li>属于脚本语言 不需要编译 由浏览器解析执行</li><li>JS可以嵌入到Html文件中 </li><li>JS是基于面向对象语言</li><li>JS属于弱类型语言<br>###JS优点</li><li>交互性： 可以直接和用户进行交互</li><li><p>安全性： JS语言只能访问浏览器内部内容，不能访问浏览器以外内容(指磁盘中的各种数据)<br>###如何在html文件中嵌入js代码</p><pre><code>&lt;!-- 1. 在元素的事件中添加js代码 --&gt;</code></pre>  <input type="button" value="点我试试" onclick="alert('第一种引入方式成功！')"></li></ul><pre><code>&lt;!-- 2. 通过script标签添加js代码  可以写在任意位置--&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        alert(&quot;第二种引入方式&quot;);    &lt;/script&gt; &lt;!-- 3.通过单独的*.js文件写js代码 以下方式引入 引入文件后    不能在当前script标签体内写js代码  --&gt;    &lt;script type=&quot;text/javascript&quot; src=&quot;first.js&quot;&gt;        //这个位置不能再写js代码    &lt;/script&gt;</code></pre><p>##JavaScript语法</p><p>###数据类型</p><ol><li>数值类型（number）</li><li>字符串类型(string)</li><li>布尔值类型(boolean)</li><li>undefined (未定义)</li><li>对象类型  null<br>###变量的声明和赋值</li></ol><ul><li><p>因为js属于弱类型语言 声明变量的时候不需要指定类型，直接赋值即可</p><p>  var x = 18;<br>  var s = “abc”;<br>  s = 20;<br>  var b = true/false;<br>  var y;</p></li><li>如果变量只声明没有赋值 则此变量的类型为undefined 值也是undefined。</li></ul><p>####数值类型 </p><ul><li>在js中所有的数值底层都是浮点型， 在使用过程中会自动转换整数或小数<pre><code>int x = 5/2; x=?(在java中结果是2)   var x= 6/2; 3var x = 5/2; 2.5</code></pre></li><li><p>NaN（Not a Number）：不是一个数 ，用来判断一个变量是否为数值类型 判断方式通过isNaN()函数判断,当变量不是数的时候为true，是数为false</p><pre><code>isNaN(20);  falseisNaN(&quot;aaa&quot;); true</code></pre><p>####字符串</p><ul><li>通过单引号或双引号修饰一个字符串，例如：var s1 = ‘abc’; var s2=”abc”;</li></ul></li></ul><p>####布尔值</p><ul><li>值为true和false<br>####undefined</li><li>此类型只有一个值为undefined，变量声明但未定义的话为undefined<br>####null</li><li>null为对象类型的值    var p = null; </li></ul><p>###js各种类型间的隐式转换</p><ol><li>数值类型</li></ol><ul><li>转字符串： 18-&gt;”18”     “abc”+18   “abc18”</li><li>转布尔值：  0和NaN转false   其它所有数转true    </li></ul><ol start="2"><li>字符串</li></ol><ul><li>转数字：  “18”-&gt;18   “abc”-&gt;NaN  “18abc”-&gt;18</li><li>转布尔值: “”空字符串转成false  其它都是true</li></ul><ol start="3"><li>布尔值</li></ol><ul><li>转数字： true-&gt;1   false-&gt;0</li><li>转字符串：true-&gt;”true”    false-&gt;”false”    </li></ul><ol start="4"><li>undefined</li></ol><ul><li>转数字  NaN     21+undefined= NaN  NaN和任何数值进行运算都得NaN</li><li>转布尔值  undefined-&gt;false   </li><li>转字符串 undefined-&gt;”undefined”</li></ul><ol start="5"><li>null</li></ol><ul><li>转数字  null-&gt;0</li><li>转布尔值    null-&gt;false </li><li>转字符串 null-&gt;”null”    “abc”+null = “abcnull”</li></ul><p>###测试 在页面中添加两个按钮点击时 弹出 “66”+6  和 “66”-6 的结果</p><p>###运算符</p><ul><li>js中运算符和Java中的基本一致</li><li><p>==和===：==会在比较两端变量数值之前先将变量类型统一，统一后再比较值.===会先比较类型是否相等如果相等再比较数值如果不等就直接false<br>“666”==666  true     “666”===666  false</p></li><li><p>typeof  获取变量的类型    typeof 234234+6 = “number6”</p></li><li>除法运算会自动根据结果转换整数还是小数<br>###语句<br>包括：if else while do while for switch case</li><li>条件如果不是布尔类型会自动转换成布尔类型</li><li><p>for 中 把int改成var， js中不支持增强for循环(foreach)</p><pre><code>for(var i=0;i&lt;10;i++){}</code></pre><p>###函数(方法)</p></li></ul><p>public String run(String name,int age){<br>        return “abc”;<br>}</p><ul><li><p>格式一：</p><pre><code>function 函数名(参数列表){    return 18;}</code></pre><p>  例如：</p><pre><code>function fun(name,age){    return &quot;abc&quot;;}</code></pre></li><li><p>格式二：</p><pre><code>var 函数名 = function(参数列表){    return &quot;abc&quot;;}</code></pre><p>####和页面元素相关的函数</p></li></ul><ol><li>得到页面元素对象的函数<br> var x = document.getElementById(“id”);</li><li><p>获取value值或给value赋值</p><p> var z = x.value;    x.value=”abc”;</p></li><li><p>给元素添加文本内容</p><p> x.innerText=”abc”;    </p></li><li><p>给元素添加html代码</p><p> x.innerHTML=”</p><h1>abc</h1>“;<p></p></li></ol><h3 id="String-内容介绍"><a href="#String-内容介绍" class="headerlink" title="String 内容介绍"></a>String 内容介绍</h3><p>String  数组  日期对象  正则 </p><p>####字符串强转成数值</p><ul><li>parseFloat: 把字符串转成整数或小数</li><li>parseInt:  把字符串/小数 转成整数</li><li>Number：等效parseFloat</li></ul><p>###String常用Api</p><ol><li><p>字符串创建的方式</p><p> var str1 = “abc”;<br> var str2 = new String(“abc”);</p></li><li>转大写和转小写<br> toUpperCase()  toLowerCase();</li><li><p>查找字符串出现的位置</p><p> str.indexOf(‘a’)获取a在str中第一次出现的位置<br> str.lastIndexOf(“a”)获取z在str中最后一次出现的位置</p></li><li>截取字符串<br> str.substring(start,[end]);  //end可以省略 </li><li>替换字符串<br> str.replace(old,new);</li><li>拆分字符串<br> str.split(“:”) a:b:c  [a,b,c]</li></ol><p>####数值函数</p><ol><li>四舍五入    num.toFixed(2);//参数表示保留几位小数</li></ol><p>####数组相关函数</p><ol><li>创建数组<br> var arr1 = [“刘备”,50,true];<br> var arr2 = new Array();//空数组</li><li>数组中添加元素<br> arr.push(“小明”);<br> arr.push(18);</li><li>获取数组中的数据arr[2];</li><li>获取数组长度和修改长度 arr.length arr.length=3;</li><li>数组反转 arr.reverse();</li><li>数组排序 arr.sort();</li><li><p>默认排序规则：按照每一个字符的unicode编码进行排序，比较完第一个字符比较第二个，把数值当成字符串进行排序</p></li><li><p>自定义排序：</p><p> var arr = [10,5,3,25,22,29,8,18,15]; /<em> 使用默认排序规则排序 / //arr.sort(); //alert(arr); / 自定义规则 </em>/ function sortfn(a,b){ //return a-b;//升序 return b-a;//降序 } arr.sort(sortfn);</p></li></ol><p>###日期相关函数</p><ol><li><p>创建时间对象得到客户端时间</p><p> var d = new Date();</p></li><li><p>创建时间对象指定时间 var d2 = new Date(“2018/08/02 12:38:22”);</p></li><li>获取和设置时间戳(距1970年1月1号 8：00:00) d2.getTime(); d2.setTime(1000);</li><li><p>获取时间分量</p><ul><li>/* 从完整时间年月日时分秒中提取时间分量 / </li><li>console.log(d.getFullYear());//年 </li><li>console.log(d.getMonth());//月 从0开始 需要+1 </li><li>console.log(d.getDate());//日 </li><li>console.log(d.getDay());//星期几 </li><li>console.log(d.getHours());//小时 </li><li>console.log(d.getMinutes());//分钟 </li><li>console.log(d.getSeconds());//秒</li><li>/ 得到年月日 / </li><li>console.log(d.toLocaleDateString());</li><li>/ 得到时分秒 */ </li><li>console.log(d.toLocaleTimeString());</li></ul></li></ol><p>###正则表达式</p><ol><li>场景：1. 查找内容 2. 校验文本</li><li>. 匹配任意字符（除了换行）</li><li>\w 匹配任意字母、数字、下划线</li><li>\d 匹配任意数字</li><li>\s 匹配任意空白</li><li>^ 开始</li><li>$ 结束</li><li>正则表达式的创建方式 var reg1 = /表达式/模式； i忽略大小写 g全局查找 var reg2 = new RegExp(“表达式”,”模式”)模式参数可省略 表达式\需要转义</li><li>相关属性<ul><li>reg.exec(str); //查找内容    查一次得到一个 没有则返回null </li><li>reg.test(str); //校验文本</li><li>str.match(reg);//查找内容 得到所有<ul><li>str.replace(reg,newStr)//查找内容并替换</li></ul></li></ul></li></ol><p>####事件的取消</p><ul><li><p>在元素的事件中如果执行 return false 则取消当前事件</p><pre><code>&lt;a href=&quot;http://tmooc.cn&quot; onclick=&quot;return false&quot;&gt;Tmooc&lt;/a&gt;</code></pre><p>###失去焦点事件</p></li><li>失去焦点以文本框为例，当光标离开的时候，此事件触发<br>  <input type="text" onblur=""><br>###控制元素的隐藏和显示</li></ul><ol><li>display:block/inline/inline-block/none(隐藏 脱离文档流)</li><li>visibility：hidden(隐藏 不脱离文档流)/visible（显示） </li></ol><p>###自定义对象</p><pre><code>/* 通过声明函数的形式声明一个对象 */function Person(name,age){//声明属性this.name=name;this.age=age;//声明方法this.run=function(){    alert(&quot;name=&quot;+this.name+&quot; age=&quot;+this.age);}}//创建对象var p = new Person(&quot;貂蝉&quot;,85);p.run();/* 声明空对象 */function SuperMan(){}//创建对象 var sman = new SuperMan();//添加属性sman.name=&quot;克拉克&quot;;sman.age=18;//添加方法sman.fly = function(){    alert(&quot;我叫&quot;+this.name+&quot;今年&quot;            +this.age+&quot;岁，我在飞&quot;);}//调用方法sman.fly();/* 第二种声明对象的方式 *//* 以声明变量的形式创建对象 */var p = {        &quot;name&quot;:&quot;吕布&quot;,        &quot;age&quot;:25,        &quot;run&quot;:function(){            alert(&quot;name&quot;+this.name+&quot; age=&quot;+this.age);        }}//调用对象的方法p.run();</code></pre><p>###DHTML</p><ul><li>简介： Dynamic(动态) HTML，不是一门新技术，把HTML，CSS，JavaScript整合到一起得到的一门动态页面技术 </li><li>DHTML包括： BOM Browser浏览器 Object对象 Model模型 和 DOM Document文档  Object对象 Model模型 </li><li>BOM： 浏览器对象模型，包括一些和浏览器相关的对象和函数 </li><li>DOM： 文档对象模型，包括一些和页面相关的对象和函数 </li></ul><p><img src="web09.png" alt=""></p><p>###BOM的相关内容</p><p>####window<br>    window中所有的属性和函数，调用时可以把window省略掉，window中的属性称为全局属性，函数称为全局函数</p><ul><li><p>window的全局函数</p><p>  parseFloat/parseInt()<br>  alert();//弹出框<br>  confirm();//确认框<br>  prompt();//弹出文本框<br>  isNaN();</p></li><li>window的全局属性</li></ul><ol><li><p>location（地址）：<br> location.href 可以获取和设置浏览器当前的显示地址</p><p> location.reload()  页面刷新</p></li><li>history（历史）：<br> history.length 得到当前窗口访问过的页面数量<br> history.forward() //访问下一个页面<br> history.back() // 访问上一个页面<br> history.go(num) 前往某个页面 0代表当前页面，1代表下个页面，2代表下两个页面 -1 代表上一个 -2 代表上两个页面</li><li>screen（屏幕）：<br> width/height: 获取屏幕的分辨率<br> availWidth/availHeight：获取屏幕可用分辨率</li><li>navigator（导航、帮助）<br> navigator.userAgent 获取浏览器的版本信息</li></ol><p>####window相关的事件</p><ol><li>点击事件</li><li>加载完成事件</li><li>获取到焦点事件</li><li><p>失去焦点事件</p><pre><code>/* 窗口点击事件 *//* onclick = function(){    //alert(&quot;窗口被点击了&quot;);    location.href=&quot;http://tmooc.cn&quot;;} *//* 页面加载完成时执行 */onload = function(){    var input = document.getElementById(&quot;ip1&quot;);    input.value=&quot;abc&quot;;}/* 获取和失去焦点事件 */onblur = function(){    console.log(&quot;失去焦点&quot;);}onfocus = function(){    console.log(&quot;得到焦点&quot;);}</code></pre><p>####eval()函数</p></li></ol><ul><li>可以将字符串以js代码的形式执行</li></ul><p>####通过js给元素添加css样式</p><pre><code>div.style.css样式属性名称 = &quot;属性的值&quot;;</code></pre><p>###定时器</p><ul><li><p>通过定时器可以实现 每隔一段时间执行某些代码</p></li><li><p>var id = setInterval(函数,3000);//每隔3秒执行函数</p></li><li>clearInterval(id);//停止定时器</li><li>setTimeout(函数,2000);//两秒后执行函数    </li></ul><p>###DOM</p><ul><li>DOM 文档对象模型，学习dom主要掌握如果对html中的标签进行增删改查操作<br>####查找元素</li><li>通过id查找  document.getElementById(“id”);</li><li>通过标签名查找  document.getElementsByTagName(“标签名”);</li><li>通过元素的name属性查找 document.getElementsByName(“name属性的值”);</li><li>通过元素的class属性查找 document.getElementsByClassName(“class属性的值”);</li><li>获取body元素  document.body<br>####通过层级关系查找元素</li></ul><ol><li>获取元素的上级元素 parentElement; </li><li>获取元素的下级内容（包括元素和文本内容和换行） childNodes</li><li>获取元素的兄弟 x.parentElement.childNodes;</li></ol><p>###创建元素</p><pre><code>var h1 = document.createElement(&quot;h1&quot;);</code></pre><p>###添加元素到某个元素里面</p><pre><code>父元素.appendChild(新元素);</code></pre><p>###插入元素到某个元素的上面</p><pre><code>父元素.insertBefore(新元素,弟弟元素);</code></pre><p>###删除元素<br>    父元素.removeChild(被删除的元素);</p><p>###事件相关</p><p>####事件分类</p><ol><li>鼠标事件： onclick(点击)  onmouseover(鼠标移动到元素上面) onmouseout(鼠标移出元素)  onmousedown(在元素上鼠标按下) onmouseup(在元素上鼠标松手) onmousemove(在元素上移动)</li><li>键盘事件： onkeydown（键盘按下） onkeyup(键盘松开)</li><li>状态改变事件：onchange(value值发生改变的事件) onload（页面加载完成事件） onfocus(获得焦点事件) onblur(失去焦点事件) onsubmit(表单提交事件) onresize(窗口尺寸改变事件)<br>####事件绑定</li><li>在元素标签中添加 <input type="text" onkeydown="downfn()"></li></ol><ul><li>此种方式添加事件 ，事件函数中的this代表的是window 如果需要用到事件对应的元素可以在标签中调用函数的时候传递过去一个this 此时的this代表元素自身</li></ul><ol start="2"><li>动态绑定事件<br> /<em> 动态绑定事件 </em>/<pre><code>/* mybtn.onclick = function(){    alert(&quot;动态绑定成功！&quot;);} */mybtn.onclick = myfn;</code></pre></li></ol><ul><li>动态绑定的事件，事件函数中的this代表事件对应的元素</li></ul><p>####Event对象</p><ul><li>通过Event对象可以得到和事件相关的信息</li></ul><ol><li>可以通过event得到鼠标点击屏幕的坐标  event.clientX event.clientY</li><li>可以通过event得到键盘按键的编码 event.keyCode</li><li><p>通过event获得事件源 （事件源指添加事件的元素）</p><p> /* 通过event得到事件源  存在兼容性问题 </p><pre><code>有的浏览器支持target 有的支持srcElement通过以下写法可以保证任何浏览器都能正常执行*/var obj = event.target||event.srcElement;alert(&quot;标签名称：&quot;+obj.nodeName);</code></pre><p>####事件传递（事件冒泡）</p></li></ol><ul><li>如果同一个区域有多个事件响应，响应的顺序类似气泡，从下往上，也就是从底层元素往上级元素执行，这个过程称为事件传递</li><li>如果页面中有多个元素需要添加事件，可以把事件添加在它们共同的上级元素上面，然后获得事件源，通过判断事件源来处理不同的事件</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; WEB前端JavaScript：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;WEB前端&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="http://yoursite.com/categories/front-end/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>WEB前端JQuery</title>
    <link href="http://yoursite.com/2018/08/30/JQuery/"/>
    <id>http://yoursite.com/2018/08/30/JQuery/</id>
    <published>2018-08-30T14:35:37.000Z</published>
    <updated>2018-09-20T06:07:29.098Z</updated>
    
    <content type="html"><![CDATA[<p><strong> WEB前端JQuery：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>WEB前端<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><p>##JQuery</p><p>####什么是JQuery</p><ul><li>是一个通过JavaScript代码写的 关于JavaScript的框架</li><li>用来简化js代码</li><li>可以像css一样通过选择器获取元素</li><li>可以快速修改元素的样式</li></ul><p>####如何引入jQuery</p><ul><li><p>因为jQuery就是一个js文件 所以引入方式和引入一个普通的js文件一样</p><pre><code>&lt;script type=&quot;text/javascript&quot;     src=&quot;../js/jquery-1.4.2.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>####jQuery对象和js对象互相转换</p></li></ul><ol><li><p>把js转成jq</p><pre><code>/* 得到js对象 */</code></pre><p> var input = document.getElementById(“myinput”);<br> /<em> 把js对象转成jQuery对象 </em>/<br> /<em> $是jQuery单词的缩写  $=jQuery </em>/<br> var $jq = $(input);<br> /<em> 弹出文本框的value值 </em>/</p></li><li><p>把jq转成js</p><pre><code>/* 得到jq对象 */</code></pre><p> var $jq = $(“#myinput”);<br> /<em> 把jq转成js对象 </em>/<br> //第一种写法<br> var js1 = $jq[0];<br> //第二种写法<br> var js2 = $jq.get(0);<br> alert(js1.value+”=”+js2.value);</p></li></ol><p>###选择器</p><p>####基础选择器</p><ol><li>标签名选择器<br> var $div = $(“div”);    </li><li>id选择器<br> var $div = $(“#id”);    </li><li>类选择器<br> var $div = $(“.class”);    </li><li>分组选择器<br> var $div = $(“div,#id,.class”);    </li><li>任意元素选择器<br> var $div = $(“*”);<br>###层级选择器</li><li>$(“div span”) 匹配div下所有的span元素</li><li>$(“div&gt;span”) 匹配div的所有span子元素</li><li>$(“div+span”) 匹配div相邻的后面的兄弟span元素 </li><li>$(“div~span”) 匹配div后面所有的兄弟span元素<br>###层级函数 当得到某个元素对象后 需要获得该元素的相关元素的时候使用</li><li>获取元素的所有兄弟元素<br> $(“#abc”).siblings(“div”);  </li><li>获取元素的哥哥元素<br> $(“#abc”).prev(“div”);</li><li>获取元素的哥哥们元素<br> $(“#abc”).prevAll(“div”);</li><li>获取元素的弟弟元素<br> $(“#abc”).next(“div”); </li><li>获取元素的弟弟们元素<br> $(“#abc”).nextAll(“div”);<br>###过滤选择器</li><li>$(“div:first”)匹配所有div中的第一个  </li><li>$(“div:last”)匹配所有div中的最后一个  </li><li>$(“div:even”)匹配所有div中的偶数 从0开始</li><li>$(“div:odd”)匹配所有div中的奇数 从0开始</li><li>$(“div:eq(n)”) 匹配所有div中下标等于n的 从0开始</li><li>$(“div:lt(n)”) 匹配所有div中下标小于n的 从0开始</li><li>$(“div:gt(n)”) 匹配所有div中下标大于n的 从0开始</li><li>$(“div:not(.abc)”  匹配所有div中class值不等于abc<br>###内容选择器</li><li>$(“div:has(p)”) 匹配所有包含p标签的div</li><li>$(“div:empty”) 匹配所有空的div</li><li>$(“div:parent”)匹配所有非空的div</li><li>$(“div:contains(‘abc’)”) 匹配包含abc文本内容的div<br>###可见选择器</li><li>$(“div:hidden”) 匹配所有隐藏的div</li><li>$(“div:visible”)匹配所有可见的div<br>###显示隐藏相关的函数</li><li>让隐藏的元素显示<br> $(“div:hidden”).show();</li><li>让显示额元素隐藏<br> $(“div:visible”).hide();</li><li>切换隐藏和显示状态<br> $(“#abc”).toggle();<br>###属性选择器</li><li>$(“div[id]”) 匹配所有有id属性的div元素</li><li>$(“div[id=’abc’]”) 匹配有id属性值为abc的所有div</li><li>$(“div[id!=’abc’]”) 匹配有id属性值不为abc的所有div<br>###子元素选择器 </li><li>$(“div:nth-child(n)”) 获取div中第n个子元素 从1开始</li><li>$(“div:first-child”) 获取div中第1个子元素</li><li>$(“div:last-child”) 获取div中最后一个子元素<br>###表单选择器</li><li>$(“:input”) 匹配所有 文本框 密码框 单选 多选 下拉选 文本域 按钮</li><li>$(“:password”) 匹配所有密码框</li><li>$(“:radio”)匹配所有单选</li><li>$(“:checkbox”)匹配所有多选（复选框）</li><li>$(“:checked”)匹配所有被选中的 单选、多选、下拉选</li><li>$(“input:checked”) 匹配所有被选中的 单选、多选</li><li>$(“:selected”) 匹配被选中的下拉选</li></ol><p>###和页面(DOM)相关</p><ol><li>创建元素<br> var div = document.createElement(“div”);<br> var $div = $(“<div>abc</div>“);</li><li><p>添加到页面中<br> $(“#big”).append($div); //添加到最后面<br> $(“#big”).prepend($div);//添加到最前面</p></li><li><p>插入元素<br> 兄弟元素.after(新元素) 加载兄弟元素的后面<br> 兄弟元素.before(新元素) 加载兄弟元素的前面</p><pre><code>//添加到二哥前面 before$(&quot;h1:contains(&apos;二&apos;)&quot;).before($h1);//添加到二哥的后面 after$(&quot;h1:contains(&apos;二&apos;)&quot;).after($h1);</code></pre></li><li><p>删除元素</p></li></ol><ul><li>通过自己删除  $(“#id”).remove();</li><li>先匹配到所有的指定类型元素 从里面删除某些元素 $(“div”).remove(“#abc”);</li></ul><ol start="5"><li><p>修改元素的样式css<br> $(“div”).css(“color”,”red”);</p></li><li><p>属性<br> $(“#abc”).attr(“id”); 获取id的属性值<br> $(“#abc”).attr(“class”,”aaa”); 给元素添加class属性值为aaa</p></li><li><p>文本<br> $(“#abc”).text()  获取文本内容<br> $(“#abc”).text(“啊啊啊”) 赋值文本内容</p></li><li>html<br> $(“#abc”).html()  获取文本内容<br> $(“#abc”).html(“<h1>啊啊啊</h1>“) 赋值文本内容</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; WEB前端JQuery：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;WEB前端&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="http://yoursite.com/categories/front-end/"/>
    
    
      <category term="JQuery" scheme="http://yoursite.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>WEB前端(一)</title>
    <link href="http://yoursite.com/2018/08/30/web01/"/>
    <id>http://yoursite.com/2018/08/30/web01/</id>
    <published>2018-08-30T14:35:37.000Z</published>
    <updated>2018-09-20T06:01:42.964Z</updated>
    
    <content type="html"><![CDATA[<p><strong> WEB前端(一)：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>WEB前端<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""><br>刘国斌 77331283   <a href="mailto:bjliugb@tedu.cn" target="_blank" rel="noopener">bjliugb@tedu.cn</a></the></p><p>###网站的架构</p><ul><li>CS：Client Server 客户端和服务端<br>  移动客户端：Android和iOS<br>  电脑客户端：windows和linux、Mac OS<br>  客户端是由客户端工程师开发<br>  服务端功能：给客户端提供数据<br>  应用场景： 京东、淘宝、唯品会</li><li>BS：Browser Server 浏览器和服务端<br>  浏览器<br>  服务端功能： 给浏览器提供数据 和 页面<br>  应用场景： 页游<br><img src="web01-1.png" alt=""></li><li>将来工作 BS和CS架构都会涉及，但是只需要掌握BS架构 CS就会了</li></ul><p>###课程介绍</p><p><img src="web01-2.png" alt=""></p><p>###前端课程介绍</p><ol><li>HTML ： 用来勾勒出页面的结构和内容(骨架)</li><li>CSS ： 用来美化页面 </li><li>JavaScript： 让页面呈现动态效果和动态数据的</li><li>JQuery：用来简化JavaScript代码的</li></ol><p>###HTML<br>    Hyper Text Markup Language：超文本标记语言 </p><ul><li>什么是超文本：不仅仅是文本，还包括文本的字体颜色，样式 还包括多媒体（图片，音频，视频）</li><li>html学习内容： 学习有哪些固定的标签，还有标签内部有哪些属性和标签和标签之间的嵌套关系</li></ul><p>###通过Eclipse创建html文件 </p><ul><li>新建文件-&gt; other-&gt;搜索html </li></ul><p>###html结构</p><pre><code>&lt;!DOCTYPE html&gt;   //文档声明 告诉浏览器使用html的哪个版本来解析页面内容 ，此写法是告诉浏览器用最新的html5的版本解析 &lt;html&gt;//所有内容都在html标签内部 除了 文档声明    &lt;head&gt;//头 ：里面的内容是给浏览器看的 比如使用什么编码     &lt;/head&gt;    &lt;body&gt;//体 ：里面的内容是给用户看的     &lt;/body&gt;&lt;/html&gt;</code></pre><p>####head里面的标签</p><pre><code>&lt;meta charset=&quot;UTF-8&quot;&gt;：告诉浏览器使用哪种字符集解析&lt;title&gt;Insert title here&lt;/title&gt; 告诉浏览器 页面标题是什么，title还可以起到优化SEO的作用（让搜索引擎尽快搜索到此页面） keywords的作用：让搜索引擎尽快的找到本页面</code></pre><p>###Body内部的标签</p><p>####文本标签</p><pre><code>1. &lt;h1&gt;&lt;/h1&gt;.......&lt;h6&gt;&lt;/h6&gt; 内容标题- align：left/center/right  水平对齐方式2. &lt;p&gt;&lt;/p&gt;    段落标签 ，每个段落标签独占一行并且上下会留有空白区域3. &lt;hr&gt; 水平分割线4. &lt;br&gt; 换行</code></pre><p>####列表标签</p><ol><li><p>无序列表：</p><pre><code>&lt;ul type=&quot;circle&quot;&gt; &lt;!-- u:unordered 无序 l:list 列表 --&gt;    &lt;li&gt;刘备&lt;/li&gt;&lt;!--l:list列表 i:item 项  --&gt;    &lt;li&gt;貂蝉&lt;/li&gt;    &lt;li&gt;孙尚香&lt;/li&gt;    &lt;li&gt;孙悟空&lt;/li&gt;&lt;/ul&gt;</code></pre></li><li><p>有序列表</p><pre><code>&lt;ol&gt;    &lt;li&gt;打开冰箱门&lt;/li&gt;     &lt;li&gt;把大象装进去&lt;/li&gt;    &lt;li&gt;关上冰箱门&lt;/li&gt;    &lt;li&gt;啦啦啦&lt;/li&gt;&lt;/ol&gt;</code></pre></li></ol><ul><li>常见属性： type 控制每个列表项前面的表示的（a A i I 1默认） start 列表数值的起始值  reversed 倒序</li></ul><ol start="3"><li><p>定义列表</p><pre><code>&lt;h3&gt;定义列表&lt;/h3&gt;&lt;dl&gt;&lt;!-- defined list 定义一个列表 --&gt;    &lt;dt&gt;凉菜&lt;/dt&gt;&lt;!--defined title 定义标题 --&gt;    &lt;dd&gt;老醋花生&lt;/dd&gt;&lt;!--defined data 定义数据  --&gt;    &lt;dd&gt;花毛一体&lt;/dd&gt;    &lt;dd&gt;大拌菜&lt;/dd&gt;    &lt;dt&gt;炒菜&lt;/dt&gt;    &lt;dd&gt;宫保鸡丁&lt;/dd&gt;    &lt;dd&gt;小炒肉&lt;/dd&gt;    &lt;dd&gt;木须肉&lt;/dd&gt;&lt;/dl&gt;</code></pre></li><li><p>列表嵌套</p></li></ol><ul><li>有序和无序列表可以任意嵌套多层</li></ul><p>###分区标签（元素） div和span </p><ul><li>对页面进行分区有两大好处：</li></ul><ol><li>可以多个页面复用同一个区域的内容</li><li>可以对整个区域的内容进行统一管理</li></ol><ul><li>分区元素本身没有显示效果，起到容器的作用</li><li>div： 块级分区 独占一行 </li><li>span： 行内分区 和多个行内分区元素 共占一行 </li><li><p>通常一个页面会分为三大区域</p><pre><code>&lt;body&gt;    &lt;div&gt;头部区域&lt;/div&gt;    &lt;div&gt;正文区域&lt;/div&gt;    &lt;div&gt;尾/脚部区域&lt;/div&gt;&lt;/body&gt;</code></pre></li><li>在html5中提出了几个分区元素 效果和div一样，但是代码可读性增强了<pre><code>&lt;body&gt;    &lt;header&gt;头部区域&lt;/header&gt;    &lt;article&gt;正文区域&lt;/article&gt;    &lt;footer&gt;脚部区域&lt;/footer&gt;&lt;/body&gt;</code></pre>####元素的分类</li><li>块级元素：独占一行<br>  包括： h1-h6, p,div,hr</li><li>行内元素：和多个行内元素共占一行<br>  包括：span, <i></i>和 <em></em>（斜体）<b></b>和<strong></strong>(粗体)  <u></u>下划线   <s></s>和<del></del>删除线<br>####行内元素空格折叠现象</li><li>行内元素中空格如果有多个只能识别一个空格<br>####需要转义的常见特殊字符 实体引用</li><li>空格： &nbsp;</li><li>&lt; : &lt;</li><li><blockquote><p>: &gt;</p></blockquote></li><li>换行：<br></li></ul><p>###图片元素</p><ul><li><img>属于单标签</li><li>常见属性：</li></ul><ol><li>alt：当图片不能正常显示的时候显示此文本</li><li>src：写图片的路径，路径分为两种：</li></ol><ul><li>绝对路径：以http开头的路径，此路径可以指向本网站也可以指向其它网站(盗链，盗链图片如果原网站图片发生改变则不能正常显示)</li><li>相对路径：相对于当前页面html文件 1. 图片和页面文件在同一个文件夹下，直接写文件名，2. 图片在页面文件的上一层文件夹 ../文件名  3. 在页面文件的下一层文件夹  文件夹名/文件夹名/文件名</li><li>路径总结： 如果是站内资源使用相对路径，站外资源使用绝对路径</li><li>图床：专门存放图片的网站，使用图床可以节省本站空间</li></ul><ol start="3"><li>title:图片标题 当鼠标悬停在图片上面的时候显示</li><li>width：设置图片的宽度，两种方式：像素和百分比，如果只设置宽度 高度会保证宽高比的情况下自动跟着宽度改变</li><li>height: 设置图片的高度，两种方式：像素和百分比。</li></ol><ul><li>img支持的图片格式： jpg  png  gif</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; WEB前端(一)：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;WEB前端&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="http://yoursite.com/categories/front-end/"/>
    
    
      <category term="WEB" scheme="http://yoursite.com/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>WEB前端HTML</title>
    <link href="http://yoursite.com/2018/08/30/HTML/"/>
    <id>http://yoursite.com/2018/08/30/HTML/</id>
    <published>2018-08-30T14:35:37.000Z</published>
    <updated>2018-09-20T06:06:53.259Z</updated>
    
    <content type="html"><![CDATA[<p><strong> WEB前端HTML：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>WEB前端<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><p>###HTML<br>    Hyper Text Markup Language：超文本标记语言 </p><ul><li>什么是超文本：不仅仅是文本，还包括文本的字体颜色，样式 还包括多媒体（图片，音频，视频）</li><li>html学习内容： 学习有哪些固定的标签，还有标签内部有哪些属性和标签和标签之间的嵌套关系</li></ul><p>###通过Eclipse创建html文件 </p><ul><li>新建文件-&gt; other-&gt;搜索html </li></ul><p>###html结构</p><pre><code>&lt;!DOCTYPE html&gt;   //文档声明 告诉浏览器使用html的哪个版本来解析页面内容 ，此写法是告诉浏览器用最新的html5的版本解析 &lt;html&gt;//所有内容都在html标签内部 除了 文档声明    &lt;head&gt;//头 ：里面的内容是给浏览器看的 比如使用什么编码     &lt;/head&gt;    &lt;body&gt;//体 ：里面的内容是给用户看的     &lt;/body&gt;&lt;/html&gt;</code></pre><p>####head里面的标签</p><pre><code>&lt;meta charset=&quot;UTF-8&quot;&gt;：告诉浏览器使用哪种字符集解析&lt;title&gt;Insert title here&lt;/title&gt; 告诉浏览器 页面标题是什么，title还可以起到优化SEO的作用（让搜索引擎尽快搜索到此页面） keywords的作用：让搜索引擎尽快的找到本页面</code></pre><p>###Body内部的标签</p><p>####文本标签</p><pre><code>1. &lt;h1&gt;&lt;/h1&gt;.......&lt;h6&gt;&lt;/h6&gt; 内容标题- align：left/center/right  水平对齐方式2. &lt;p&gt;&lt;/p&gt;    段落标签 ，每个段落标签独占一行并且上下会留有空白区域3. &lt;hr&gt; 水平分割线4. &lt;br&gt; 换行</code></pre><p>####列表标签</p><ol><li><p>无序列表：</p><pre><code>&lt;ul type=&quot;circle&quot;&gt; &lt;!-- u:unordered 无序 l:list 列表 --&gt;    &lt;li&gt;刘备&lt;/li&gt;&lt;!--l:list列表 i:item 项  --&gt;    &lt;li&gt;貂蝉&lt;/li&gt;    &lt;li&gt;孙尚香&lt;/li&gt;    &lt;li&gt;孙悟空&lt;/li&gt;&lt;/ul&gt;</code></pre></li><li><p>有序列表</p><pre><code>&lt;ol&gt;    &lt;li&gt;打开冰箱门&lt;/li&gt;     &lt;li&gt;把大象装进去&lt;/li&gt;    &lt;li&gt;关上冰箱门&lt;/li&gt;    &lt;li&gt;啦啦啦&lt;/li&gt;&lt;/ol&gt;</code></pre></li></ol><ul><li>常见属性： type 控制每个列表项前面的表示的（a A i I 1默认） start 列表数值的起始值  reversed 倒序</li></ul><ol start="3"><li><p>定义列表</p><pre><code>&lt;h3&gt;定义列表&lt;/h3&gt;&lt;dl&gt;&lt;!-- defined list 定义一个列表 --&gt;    &lt;dt&gt;凉菜&lt;/dt&gt;&lt;!--defined title 定义标题 --&gt;    &lt;dd&gt;老醋花生&lt;/dd&gt;&lt;!--defined data 定义数据  --&gt;    &lt;dd&gt;花毛一体&lt;/dd&gt;    &lt;dd&gt;大拌菜&lt;/dd&gt;    &lt;dt&gt;炒菜&lt;/dt&gt;    &lt;dd&gt;宫保鸡丁&lt;/dd&gt;    &lt;dd&gt;小炒肉&lt;/dd&gt;    &lt;dd&gt;木须肉&lt;/dd&gt;&lt;/dl&gt;</code></pre></li><li><p>列表嵌套</p></li></ol><ul><li>有序和无序列表可以任意嵌套多层</li></ul><p>###分区标签（元素） div和span </p><ul><li>对页面进行分区有两大好处：</li></ul><ol><li>可以多个页面复用同一个区域的内容</li><li>可以对整个区域的内容进行统一管理</li></ol><ul><li>分区元素本身没有显示效果，起到容器的作用</li><li>div： 块级分区 独占一行 </li><li>span： 行内分区 和多个行内分区元素 共占一行 </li><li><p>通常一个页面会分为三大区域</p><pre><code>&lt;body&gt;    &lt;div&gt;头部区域&lt;/div&gt;    &lt;div&gt;正文区域&lt;/div&gt;    &lt;div&gt;尾/脚部区域&lt;/div&gt;&lt;/body&gt;</code></pre></li><li>在html5中提出了几个分区元素 效果和div一样，但是代码可读性增强了<pre><code>&lt;body&gt;    &lt;header&gt;头部区域&lt;/header&gt;    &lt;article&gt;正文区域&lt;/article&gt;    &lt;footer&gt;脚部区域&lt;/footer&gt;&lt;/body&gt;</code></pre>####元素的分类</li><li>块级元素：独占一行<br>  包括： h1-h6, p,div,hr</li><li>行内元素：和多个行内元素共占一行<br>  包括：span, <i></i>和 <em></em>（斜体）<b></b>和<strong></strong>(粗体)  <u></u>下划线   <s></s>和<del></del>删除线<br>####行内元素空格折叠现象</li><li>行内元素中空格如果有多个只能识别一个空格<br>####需要转义的常见特殊字符 实体引用</li><li>空格： &nbsp;</li><li>&lt; : &lt;</li><li><blockquote><p>: &gt;</p></blockquote></li><li>换行：<br></li></ul><p>###图片元素</p><ul><li><img>属于单标签</li><li>常见属性：</li></ul><ol><li>alt：当图片不能正常显示的时候显示此文本</li><li>src：写图片的路径，路径分为两种：</li></ol><ul><li>绝对路径：以http开头的路径，此路径可以指向本网站也可以指向其它网站(盗链，盗链图片如果原网站图片发生改变则不能正常显示)</li><li>相对路径：相对于当前页面html文件 1. 图片和页面文件在同一个文件夹下，直接写文件名，2. 图片在页面文件的上一层文件夹 ../文件名  3. 在页面文件的下一层文件夹  文件夹名/文件夹名/文件名</li><li>路径总结： 如果是站内资源使用相对路径，站外资源使用绝对路径</li><li>图床：专门存放图片的网站，使用图床可以节省本站空间</li></ul><ol start="3"><li>title:图片标题 当鼠标悬停在图片上面的时候显示</li><li>width：设置图片的宽度，两种方式：像素和百分比，如果只设置宽度 高度会保证宽高比的情况下自动跟着宽度改变</li><li>height: 设置图片的高度，两种方式：像素和百分比。</li></ol><ul><li>img支持的图片格式： jpg  png  gif</li></ul><p>####Map 图像地图</p><ul><li>什么是图像地图： 可以将图片的某个区域作为可点击的链接</li><li><p>使用方式：</p><pre><code>&lt;!-- usemap:使用地图 #代表当前页面 --&gt;&lt;img alt=&quot;&quot; src=&quot;../imgs/b.jpg&quot; usemap=&quot;#mymap&quot;&gt;&lt;!-- 为了保证兼容性问题 把name和id都写上  --&gt;&lt;map name=&quot;mymap&quot; id=&quot;mymap&quot;&gt;    &lt;!-- area区域  shape形状 rect矩形 coords坐标--&gt;    &lt;area shape=&quot;rect&quot; coords=&quot;0,0,200,200&quot;             href=&quot;../imgs/2.gif&quot;&gt;    &lt;area shape=&quot;circle&quot; coords=&quot;663,473,90&quot;         href=&quot;../imgs/d.jpg&quot;&gt;&lt;/map&gt;</code></pre></li><li>map中的id和name作用是让图片能够找得到此地图</li><li>area常见属性： shape表示形状 常用有circle和rect</li><li>href：值为一个路径，可以写相对路径和绝对路径，路径可以指向页面，也可以指向文件（浏览器可以打开的文件直接浏览，不能打开的文件则下载）</li></ul><p>###超链接 a标签</p><ul><li>如果a标签没有添加href属性 就相当于一个文本不是超链接</li><li>href属性和图像地图中的href作用一样</li><li>target=”_blank” 开启一个新的页面</li><li>锚点用法： 需要先创建锚点:<a id="a" name="a"></a>, 然后通过a标签跳转到锚点的位置：<a href="#a">跳转到锚点</a></li><li>img标签放在a标签内部 则图片就可以被点击了<br>###练习：1号美女  2号美女   3号美女    4号帅哥</li></ul><p>###表格 table</p><ul><li>接触标签有 table tr td</li><li>table的属性：align水平对齐 width宽度 border边框 cellspacing边框和单元格的距离 cellpadding内容和单元格的距离 </li><li>td的属性：colspan跨列  rowspan跨行 align水平对齐</li><li>caption标签</li><li>分组标签：<thead> <tbody> <tfoot>  没有任何显示效果，提高代码可读性</tfoot></tbody></thead></li></ul><p>###表单</p><ul><li>表单的作用是收集用户的数据提交到服务端</li><li><p>表单中的控件包括： 文本框、密码框、按钮、下拉列表、单选、复选、时间选择、文件选择、文本域<br>####文本框 </p><pre><code>&lt;input type=&quot;text&quot; placeholder=&quot;占位文本&quot; maxlength=&quot;最大字符长度&quot; readonly=&quot;只读&quot; &gt;</code></pre><p>####密码框</p><pre><code>&lt;input type=&quot;password&quot; maxlength&gt;</code></pre></li></ul><p>####单选</p><pre><code>&lt;input type=&quot;radio&quot; checked默认选中&gt;</code></pre><p>####多选、复选框</p><pre><code>&lt;input type=&quot;checkbox&quot; id=&quot;aaa&quot;&gt;  &lt;label for=&quot;aaa&quot;&gt;xxx&lt;/label&gt;</code></pre><p>####时间</p><pre><code>&lt;input type=&quot;date&quot; &gt;</code></pre><p>####文件</p><pre><code>&lt;input type=&quot;file&quot; &gt;</code></pre><p>####下拉选</p><pre><code>&lt;select name&gt;        &lt;option value selected&gt;&lt;/option&gt;&lt;select&gt;</code></pre><p>####文本域 </p><pre><code>&lt;textarea rows=&quot;行数&quot; cols=&quot;列数&quot;&gt;&lt;/textarea&gt;</code></pre><p>####隐藏域</p><pre><code>&lt;input type=&quot;hidden&quot;&gt;</code></pre><p>####按钮</p><pre><code>&lt;input type=&quot;submit/reset/button&quot; value=&quot;按钮标题&quot;&gt;</code></pre><p>####代码</p><ol><li><p>图像地图Map  </p><pre><code>&lt;img usemap=&quot;#mymap&quot;&gt;&lt;map name=&quot;mymap&quot; id=&quot;mymap&quot;&gt;&lt;area shape=&quot;rect/circle&quot; coords=&quot;&quot; href=&quot;&quot;&gt;&lt;/area&gt;&lt;/map&gt;</code></pre></li><li><p>超链接 a</p><pre><code>&lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;超链接&lt;/a&gt;&lt;a id name &gt;&lt;/a&gt;   &lt;a href=&quot;#id/name&quot;&gt;跳转&lt;/a&gt;</code></pre></li><li><p>表格 </p><pre><code>&lt;table border cellspacing cellpadding width align&gt;&lt;tr&gt;行&lt;td rowspan  colspan align&gt;列&lt;th&gt;表头&lt;thead&gt; &lt;tbody&gt; &lt;tfoot&gt;  &lt;caption&gt; 表的标题</code></pre></li><li><p>表单  文本框 密码框 单选 多选  文件 日期  隐藏域 按钮 下拉选 文本域</p><pre><code>&lt;input type=&quot;text/password/radio/checkbox/file/date/hidden/submit/reset/button&quot; name value id checked placeholder readonly maxlength&gt;&lt;label for=&quot;id&quot;&gt;&lt;select name&gt;&lt;option value selected&gt;&lt;textarea rows   cols &gt;</code></pre></li></ol></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; WEB前端HTML：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;WEB前端&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="http://yoursite.com/categories/front-end/"/>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>WEB前端CSS</title>
    <link href="http://yoursite.com/2018/08/30/CSS/"/>
    <id>http://yoursite.com/2018/08/30/CSS/</id>
    <published>2018-08-30T14:35:37.000Z</published>
    <updated>2018-09-20T06:06:54.214Z</updated>
    
    <content type="html"><![CDATA[<p><strong> WEB前端CSS：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>WEB前端<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><p>###CSS</p><ul><li>美化页面的技术</li><li>Cascading 层叠 Style 样式 Sheet 表 ： 层叠样式表，CSS用于美化html页面，html可以理解成盖房子，CSS相当于装修</li></ul><p>###CSS的引入方式</p><ol><li><p>内联样式：在标签内部通过 style属性添加样式，弊端：只能作用于一个元素，不能复用，几乎不使用</p><pre><code>&lt;div style=&quot;color: red;border: 1px solid green;&quot;&gt;我是一个div&lt;/div&gt;&lt;span style=&quot;color: purple;border: 1px solid pink&quot;&gt;我是一个span&lt;/span&gt;</code></pre></li><li><p>内部样式：在head标签内部通过 style子标签添加样式，好处：可以在本页面内复用样式，弊端：不能多个页面复用同一样式 ，工作中此种方式用的不多，但是学习的时候使用内部样式，主要是方便演示</p></li></ol><pre><code>&lt;style type=&quot;text/css&quot;&gt;    /* 标签名选择器 */    h3{        color: blue;        border: 2px solid yellow;    }&lt;/style&gt;</code></pre><ol start="3"><li><p>外部样式：样式代码写在单独的*.css文件中，通过link标签引入到某个html页面中，好处：样式可以复用在多个页面中</p><pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;demo01.css&quot;&gt;css文件：@charset &quot;UTF-8&quot;;p{    color: red;    background-color: green;}</code></pre></li></ol><p>###三种引入方式的优先级</p><ul><li>如果三种引入方式作用的样式不同则全部生效</li><li>如果三种引入方式作用的样式相同则按照下面的优先级规则来决定到底哪个生效</li></ul><ol><li>内联优先级最高</li><li>内部和外部 后执行会覆盖先执行的</li></ol><p>###CSS的选择器</p><p>####基础选择器</p><ol><li>标签名选择器  </li></ol><ul><li>应用场景：当需要对页面中所有的某一种标签设置相同效果的时候<pre><code>标签名{    样式名称:值;    样式名称:值;}</code></pre></li></ul><ol start="2"><li>id选择器</li></ol><ul><li>通过标签的id属性找到对应的标签</li><li><p>应用场景：当需要对页面中的某一个元素设置样式的时候使用</p><pre><code>#标签id{    样式名称:值;    样式名称:值;}</code></pre></li></ul><ol start="3"><li>类选择器</li></ol><ul><li>通过标签的class属性找到对应的标签</li><li><p>应用场景：当需要对页面中的多个元素设置样式的时候使用</p><pre><code>.class{    样式名称:值;    样式名称:值;}</code></pre><p>####其它各种选择器</p></li></ul><ol><li>属性选择器</li></ol><ul><li><p>通过标签内部指定属性查找对应的标签</p><pre><code>标签名[属性名=&quot;属性值&quot;]{    样式名称:值;    样式名称:值;}</code></pre></li></ul><ol start="2"><li>派生选择器(后代选择器)</li></ol><ul><li><p>通过多个标签之间的上下级关系查找子元素和孙子元素和。。。。所有后代元素</p><pre><code>基础选择器 基础选择器 基础选择器{    样式名称:值;    样式名称:值;}</code></pre></li></ul><ol start="3"><li>子元素选择器</li></ol><ul><li><p>通过多个标签之间的上下级关系查找子元素。</p><pre><code>基础选择器&gt;基础选择器&gt;基础选择器{    样式名称:值;    样式名称:值;}</code></pre></li></ul><ol start="4"><li>分组选择器</li></ol><ul><li>分组选择器可以把多种选择器通过逗号连接到一起，给多个选择器设置相同的样式<pre><code>h3,p,.d1,#abc,#bcd{    color:red;}</code></pre></li></ul><ol start="5"><li>伪类选择器</li></ol><ul><li>用于选择元素的状态</li></ul><ol><li>visited：访问过的状态</li><li>link：未点击状态</li><li>hover：鼠标悬停状态</li><li>active：鼠标点击时的状态</li></ol><ul><li>使用方式：<pre><code>    /* 访问过的状态 */    a:visited {    color: red;}    /* 未点击状态 */    a:link {    color: yellow;}    /* 鼠标悬停状态 */    a:hover {    color: blue;}    /* 鼠标点击时的状态 */    a:active {    color: pink;}</code></pre></li></ul><ol start="6"><li>任意元素选择器</li></ol><ul><li><p>如果需要给页面中所有的元素设置相同的样式可以使用此选择器</p><pre><code>*{    样式名称:值;    样式名称:值;}</code></pre></li></ul><p>####如果多个选择器设置相同样式的效果时，作用范围越小优先级越高</p><p>###CSS中常用的属性</p><ul><li>已经接触的属性 color（字体颜色）background-color(背景颜色) border（边框）</li></ul><h4 id="元素的宽高："><a href="#元素的宽高：" class="headerlink" title="元素的宽高："></a>元素的宽高：</h4><ol><li>块级元素的默认高度为内容高度，默认宽度为父元素的宽度</li><li>行内元素的默认宽高为内容的宽高</li></ol><ul><li><p>只能修改块级元素的宽高，不能修改行内元素的宽高<br>####设置元素的颜色</p><pre><code>/*1. 通过颜色名称赋值 red yellow green blue pink purple white black orange gray*//*2. 6位16进制赋值 每两位表示一个颜色 红 绿 蓝   *//* background-color: #ff00ff; *//*3. 3位16进制赋值 每一位表示一个颜色  *//* background-color: #00f; *//*4. 通过3位 10进制赋值 每个取值0-255  *//* background-color:rgb(255,255,0); *//*5. 4位10进制赋值 第四位代表透明度取值0-1 */background-color: rgba(0,255,0,0.5);</code></pre><p>####设置元素的背景图片</p><pre><code>/* 设置背景图片 */background-image: url(&quot;../imgs/a.jpg&quot;);/* 设置背景图片的大小 参数为宽和高  */ background-size: 100px 100px;/* 设置背景图片不重复 */background-repeat: no-repeat;/* 设置背景图片的位置 left center right top bottom 第一个参数代表水平 第二个参数代表垂直*//* background-position: right center; *//* 通过百分比控制位置 */background-position:90% 90%;</code></pre></li></ul><p>###盒子模型</p><p>####外边距</p><ul><li>元素距离父元素或相邻兄弟元素的距离称为外边距</li><li><p>赋值方式：</p><pre><code>/* margin: 40px; 四个外边距都是40px *//* margin: 20px 50px; 上下20 左右50 *//* margin: 0 auto; 水平居中 */margin: 10px 30px 60px 90px;/* 顺时针 上右下左 */</code></pre></li><li>块级元素：上下左右都生效</li><li>行内元素：只有左右生效 上下不生效</li><li>外边距粘连问题： 当元素的上边缘和父元素的上边缘重合的时候，子元素的上外边距会带着父元素一起移动，通过在父元素中添加 overflow:hidden;解决。</li><li>上下外边距取最大值，左右外边距相加<br>####边框<br>  border: 粗细(像素值) 边框的样式(solid) 颜色<br>  /<em> border: 10px inset purple; </em>/<pre><code>border-bottom:5px solid yellow;border-left:5px solid pink;border-top:5px solid green;border-right:5px solid black;border-radius:55px;/*圆角 值越大越园  */</code></pre></li><li>块级元素： 上下左右边框全部生效，而且边框都会占显示区域</li><li>行内元素： 上下左右边框全部生效，但是只有左右边框才会占显示区域，上下不占显示区域（不会增加元素自身的高度）</li></ul><p>####内边距</p><ul><li>内容距离边框的距离    </li><li>给元素添加内边距会影响元素的宽高</li><li>移动元素内的子元素几种方式？ 两种：1. 给大的添加内边距（大的所占宽高会跟着改变） 2. 给小的添加外边距</li><li>移动元素内的文本的时候几种？ 一种：只能给大的添加内边距。</li><li>块级元素：内边距四个方向都生效，而且都会影响元素的显示范围</li><li>行内元素：内边距四个方向都生效，左右影响显示范围，上下不影响显示范围</li></ul><p>####块级元素和行内元素关于盒子模型的总结</p><ol><li>块级元素：可以设置宽高，外边距全部生效 并且影响元素的所占宽高, 边框四个方向都生效，并且影响元素的所占宽高，内边距全部生效，并且影响元素所占的宽高</li><li>行内元素：不可以设置宽高，外边距左右生效，上下不生效，边框都生效，上下不影响所占高度，内边距都有效果，左右影响所占宽度 上下不影响所占高度<br>###元素所占宽度计算公式<br>宽高为100*200 左外边距10 右外30  边框5px 左内8px 右内2px</li></ol><p>100+10+30+5*2+8+2<br>左外边距+左边框+左内边距+元素宽度+右内边距+右边框+右外边距</p><p>###文本相关的属性</p><pre><code>/* 文本相关属性 *//* 文本水平对齐方式 center/left/right */text-align: center;/* 文本修饰  none 没有 underline 下划线overline 上划线line-through 删除线*/text-decoration: line-through;/* 文本颜色 */color: red;/* 行高  通常让文本垂直居中的时候使用行高 */ line-height: 100px;/* 文本阴影   4个参数1. 阴影颜色 2和3是阴影的偏移值  4. 阴影的模糊度 值越小越清晰 0是不模糊*/text-shadow: #0f0 -15px 15px 1px;</code></pre><p>####字体相关属性</p><pre><code>/* 字体相关属性 */font-size: 20px;/* 字体粗细属性  normal 不加粗    bold 加粗    lighter 比普通细一些 */font-weight: lighter;/* 字体样式  可以设置多个值通过逗号分隔，以此检测哪个生效用哪个 */font-family: &quot;楷体&quot;;/* 设置斜体 */font-style: italic;</code></pre><p>###溢出设置 </p><ul><li><p>指子元素显示范围超出父元素范围时的设置</p><pre><code>/* visible(默认 超出显示)hidden: 超出不显示scroll:超出滚动显示  */overflow: hidden;</code></pre><p>###元素显示方式</p></li><li>block： 块级元素默认的显示方式，独占一行，可以修改宽高</li><li>inline：行内元素的默认显示方式，共占一行，不可以修改宽高</li><li>inline-block:行内块，共占一行 并且可以修改宽高</li></ul><p>###元素的定位</p><p>####position定位</p><p>#####静态定位（文档流定位）（默认）</p><ul><li>元素如果是块级元素则默认从上到下排列，如果是行内元素则从左向右排列</li><li>设置方式： position:static;<br>#####相对定位</li><li>相对于元素初始的位置，通过left/right/top/bottom让元素做位置的偏移</li><li>元素不会脱离文档流</li><li>场景：当元素需要从当前位置做位置偏移的时候，并且不希望其它元素跟着移动时使用此定位<br>#####绝对定位</li><li>会脱离文档流 后面有元素的话会顶上来</li><li>left/right/top/bottom 做位置偏移，相对于谁？ 1. 相对于窗口(没有祖宗或有祖宗但是没有做非static定位) 2. 相对于祖宗元素(有祖宗并且有某个祖宗做了非static定位，如果都做了，则就近原则)（如果仅仅是为了给子元素做位置的参考一般都使用relative）</li><li>场景：当元素需要相对于某个祖先元素或窗口做位置偏移的时候，并且不再占用原来的位置时使用此定位方式<br>#####固定定位</li><li>固定在窗口的某个位置，不会随着内容位置改变而改变</li><li>脱离文档流，left/right/top/bottom 坐标相对于窗口<br>####浮动定位</li><li>元素脱离文档流，元素在当前所在行内 左侧或右侧浮动，当撞到父元素边框或浮起来的兄弟元素边缘的时候</li><li>如果所有浮动的元素一行装不下会自动换行，但是如果有凸出的元素会有卡住的效果</li><li>如果元素浮动则后面的元素会往上顶(因为浮动会脱离文档流)，如果不希望后面的元素往上移动，则需要在后面紧邻的元素上添加clear属性设置both/left/right,禁止元素 两边/左/右 有浮动的元素。</li><li>如果元素的所有子元素全部浮动，并且元素没有设置高度，此时自动识别的高度为0，可以通过添加 overflow:hidden; 让元素能够识别出浮动后子元素的高度</li><li>应用场景：当多个纵向排列的元素需要改成横向排列的时候 使用浮动定位</li><li>练习： demo08.html 页面中添加一个无序列表把列表项改成横向排列<br>####行内元素的垂直对齐方式</li><li>默认对齐方式为基线对齐 vertical-align：baseline</li><li>top/middle/bottom</li></ul><p>###CSS的三大特性</p><ol><li>继承性：子元素可以继承父元素的部分属性，只能继承color/font-开头/text-文本相关/line- 此类型的属性，不仅仅子元素继承所有的后代元素都会继承</li></ol><ul><li>如果元素自身所带的样式和继承的冲突则以自身所带样式为准，如：h标签的字体大小，超链接的文本颜色和文本下划线</li></ul><ol start="2"><li>层叠性：通过不同的选择器可以多次指向同一个元素，如果设置的样式不同则全部生效，如果多个选择器设置的样式相同，则根据CSS的第三特性优先级来决定</li><li>优先级：</li></ol><ul><li>直接选中优先级高于间接选中(继承属于间接选中)</li><li>如果相同选择器，则后执行的覆盖前面的</li><li>不同选择器，作用范围越小 优先级越高    id&gt;class&gt;标签名&gt;继承<br>###CSS定位<br>####Position</li><li>position：static，静态定位（文档流定位）， 从上到下 从左向右</li><li>relative，相对定位：不脱离文档流，上右下左相对于元素初始位置</li><li>absolute，绝对定位：脱离文档流，相对于窗口或祖先元素</li><li>fixed，固定定位：脱离文档流，相对于窗口，固定在窗口的某个位置<br>####浮动定位<br>float:left/right; 元素会在当前所在行内左侧或右侧浮动</li><li>脱离文档流</li><li>如果后面的元素不想顶上去 添加 clear:left/right/both</li><li>如果元素所有子元素全部浮动的话 内容高度识别为0 通过添加overflow：hidden解决</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; WEB前端CSS：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;WEB前端&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="http://yoursite.com/categories/front-end/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>WebStrom快捷键</title>
    <link href="http://yoursite.com/2017/10/30/WebStrom%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2017/10/30/WebStrom快捷键/</id>
    <published>2017-10-30T14:35:37.000Z</published>
    <updated>2018-09-20T06:09:46.310Z</updated>
    
    <content type="html"><![CDATA[<p><strong> WebStrom快捷键：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>WebStrom快捷键<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><pre><code>Ctrl+/ 或 Ctrl+Shift+/-----------------------------------------------注释（// 或者/*…*/ ）Shift+F6-------------------------------------------------------------重构-重命名Ctrl+X-------------------------------------------------------------- 删除行Ctrl+D---------------------------------------------------------------复制行Ctrl+G---------------------------------------------------------------查找行Ctrl+Shift+Up/Down---------------------------------------------------代码向上/下移动。F2 或Shift+F2---------------------------------------------------------高亮错误或警告快速定位写代码，按Tab----------------------------------------------------------生成代码选中文本，按Ctrl+Shift+F7------------------------------------------高亮显示所有该文本，按Esc高亮消失。(因为这个功能我就可以发放心的放弃sublime了)Ctrl+B或Ctrl+鼠标左键单击------------------------------------------快速打开光标处的类或方法，（NB的功能）Ctrl + Alt + B    -------------------------------------------------Go to implementation(s) 跳转方法实现处Ctrl + Shift + I    ---------------------------------------------Open quick definition lookup 打开定义快速查找Alt + Up/Down    -------------------------------------------------Go to previous/next method 跳转到上一个/下一个方法Ctrl+E-----------------------------------------------------------最近打开的文件Alt+F1-----------------------------------------------------------查找代码所在位置Ctrl+Alt+L-------------------------------------------------------格式化代码Ctrl+R-----------------------------------------------------------替换文本Ctrl+F-----------------------------------------------------------查找文本Ctrl+P-----------------------------------------------------------方法参数提示F3---------------------------------------------------------------查找下一个Shift+F3---------------------------------------------------------查找上一个alt+Shift+F------------------------------------------------------将当前文件加入收藏夹ctrl+alt+s-------------------------------------------------------打开配置窗口ctrl+Shift+N-----------------------------------------------------通过文件名快速查找工程内的文件（必记）ctrl+Shift+alt+N-------------------------------------------------过一个字符快速查找位置（必记）Shift+enter------------------------------------------------------重新开始一行（无论光标在哪个位置）Ctrl + Alt + T----------------------------with…（if, else, try, catch, for, etc）用 * 来围绕选中的代码行，（ * 包括 if 、 while 、 try catch 等）Ctrl + Shift + U-------------------------------------------------Toggle case for word at caret or selected block 光标所在位置大小写Ctrl + Delete----------------------------------------------------Delete to word end 删除文字结束Ctrl + Backspace-------------------------------------------------Delete to word start 删除文字开始Ctrl + E---------------------------------------------------------Recent files popup 弹出最近打开的文件F11    Toggle bookmark----------------------------------------------切换标记，我觉得叫书签更好，就是sublime text 的F2Ctrl + Shift + F12-----------------------------------------------Toggle maximizing editor 切换最大化编辑器Alt + Shift + F--------------------------------------------------Add to Favorites 添至收藏夹</code></pre></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; WebStrom快捷键：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;WebStrom快捷键&lt;br&gt;
    
    </summary>
    
      <category term="tool" scheme="http://yoursite.com/categories/tool/"/>
    
    
      <category term="WebStrom" scheme="http://yoursite.com/tags/WebStrom/"/>
    
  </entry>
  
  <entry>
    <title>Linux查看系统配置常用命令</title>
    <link href="http://yoursite.com/2017/10/30/Linux%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/10/30/Linux查看系统配置常用命令/</id>
    <published>2017-10-30T14:35:37.000Z</published>
    <updated>2018-09-20T05:52:54.086Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Linux查看系统配置常用命令：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>Linux查看系统配置常用命令<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><p>系统</p><pre><code>head -n 1 /etc/issue    查看操作系统版本cat /proc/cpuinfo       查看CPU信息hostname                查看计算机名lspci -tv               列出所有PCI设备lsusb -tv               列出所有USB设备lsmod                   列出加载的内核模块env                     查看环境变量</code></pre><p>资源</p><pre><code>free -m                 查看内存使用量和交换区使用量df -h                   查看各分区使用情况du -sh &lt;目录名&gt;          查看指定目录的大小grep MemTotal /proc/meminfo    查看内存总量grep MemFree /proc/meminfo     查看空闲内存量uptime                  查看系统运行时间、用户数、负载cat /proc/loadavg       查看系统负载</code></pre><p>磁盘和分区</p><pre><code>mount | column -t       查看挂接的分区状态fdisk -l                查看所有分区swapon -s               查看所有交换分区hdparm -i /dev/hda      查看磁盘参数(仅适用于IDE设备)dmesg | grep IDE        查看启动时IDE设备检测状况</code></pre><p>网络</p><pre><code>ifconfig                查看所有网络接口的属性iptables -L             查看防火墙设置route -n                查看路由表netstat -lntp           查看所有监听端口netstat -antp           查看所有已经建立的连接netstat -s              查看网络统计信息</code></pre><p>进程</p><pre><code>ps -ef                  查看所有进程top                     实时显示进程状态</code></pre><p>用户</p><pre><code>w                             查看活动用户id &lt;用户名&gt;                 查看指定用户信息last                       查看用户登录日志cut -d: -f1 /etc/passwd    查看系统所有用户cut -d: -f1 /etc/group     查看系统所有组crontab -l                 查看当前用户的计划任务</code></pre><p>服务</p><pre><code>chkconfig --list              列出所有系统服务chkconfig --list | grep on    列出所有启动的系统服务</code></pre><p>程序</p><pre><code>rpm -qa                        查看所有安装的软件包</code></pre></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Linux查看系统配置常用命令：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;Linux查看系统配置常用命令&lt;br&gt;
    
    </summary>
    
      <category term="servicer" scheme="http://yoursite.com/categories/servicer/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>HTTP状态码说明</title>
    <link href="http://yoursite.com/2017/10/30/HTTP%E7%8A%B6%E6%80%81%E7%A0%81%E8%AF%B4%E6%98%8E/"/>
    <id>http://yoursite.com/2017/10/30/HTTP状态码说明/</id>
    <published>2017-10-30T14:35:37.000Z</published>
    <updated>2018-09-20T05:55:06.463Z</updated>
    
    <content type="html"><![CDATA[<p><strong> HTTP状态码说明：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>HTTP状态码说明<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""></the></p><p>##HTTP状态码说明<br>HTTP状态码（HTTP Status Code）是用以表示网页服务器HTTP响应状态的3位数字代码。当我们打开一个网页时，如果网页能够返回数据，也就是说影响成功了，一般状态响应码都是200。当然状态响应码，包括很多内容，下面列举了，状态响应码，及其表示的含义:</p><pre><code>100：继续 客户端应当继续发送请求。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。101： 转换协议 在发送完这个响应最后的空行后，服务器将会切换到在Upgrade 消息头中定义的那些协议。只有在切换新的协议更有好处的时候才应该采取类似措施。102：继续处理 由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。200：请求成功 处理方式：获得响应的内容，进行处理 201：请求完成，结果是创建了新资源。新创建资源的URI可在响应的实体中得到 处理方式：爬虫中不会遇到 202：请求被接受，但处理尚未完成 处理方式：阻塞等待 204：服务器端已经实现了请求，但是没有返回新的信 息。如果客户是用户代理，则无须为此更新自身的文档视图。 处理方式：丢弃 300：该状态码不被HTTP/1.0的应用程序直接使用， 只是作为3XX类型回应的默认解释。存在多个可用的被请求资源。 处理方式：若程序中能够处理，则进行进一步处理，如果程序中不能处理，则丢弃 301：请求到的资源都会分配一个永久的URL，这样就可以在将来通过该URL来访问此资源 处理方式：重定向到分配的URL 302：请求到的资源在一个不同的URL处临时保存 处理方式：重定向到临时的URL 304：请求的资源未更新 处理方式：丢弃 400：非法请求 处理方式：丢弃 401：未授权 处理方式：丢弃 403：禁止 处理方式：丢弃 404：没有找到 处理方式：丢弃 500：服务器内部错误 服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器端的源代码出现错误时出现。 501：服务器无法识别 服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。 502：错误网关 作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。 503：服务出错 由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; HTTP状态码说明：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;HTTP状态码说明&lt;br&gt;
    
    </summary>
    
      <category term="servicer" scheme="http://yoursite.com/categories/servicer/"/>
    
    
      <category term="HTTP状态码说明" scheme="http://yoursite.com/tags/HTTP%E7%8A%B6%E6%80%81%E7%A0%81%E8%AF%B4%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title>IDEA快捷键</title>
    <link href="http://yoursite.com/2017/10/30/Intellij%20IDEA%20%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2017/10/30/Intellij IDEA 快捷键整理/</id>
    <published>2017-10-30T14:35:37.000Z</published>
    <updated>2018-09-20T05:28:08.755Z</updated>
    
    <content type="html"><![CDATA[<p><strong> IDEA快捷键：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>IDEA快捷键<br><a id="more"></a></excerpt></p><p><the rest="" of="" contents="" |="" 余下全文=""><br>【常规】</the></p><pre><code>Ctrl+Shift + Enter，语句完成“！”，否定完成，输入表达式时按 “！”键Ctrl+E，最近的文件Ctrl+Shift+E，最近更改的文件Shift+Click，可以关闭文件Ctrl+[ OR ]，可以跑到大括号的开头与结尾Ctrl+F12，可以显示当前文件的结构Ctrl+F7，可以查询当前元素在当前文件中的引用，然后按 F3 可以选择Ctrl+N，可以快速打开类Ctrl+Shift+N，可以快速打开文件Alt+Q，可以看到当前方法的声明Ctrl+P，可以显示参数信息Ctrl+Shift+Insert，可以选择剪贴板内容并插入Alt+Insert，可以生成构造器/Getter/Setter等Ctrl+Alt+V，可以引入变量。例如：new String();  自动导入变量定义Ctrl+Alt+T，可以把代码包在一个块内，例如：try/catchCtrl+Enter，导入包，自动修正Ctrl+Alt+L，格式化代码Ctrl+Alt+I，将选中的代码进行自动缩进编排，这个功能在编辑 JSP 文件时也可以工作Ctrl+Alt+O，优化导入的类和包Ctrl+R，替换文本Ctrl+F，查找文本Ctrl+Shift+Space，自动补全代码Ctrl+空格，代码提示（与系统输入法快捷键冲突）Ctrl+Shift+Alt+N，查找类中的方法或变量Alt+Shift+C，最近的更改Alt+Shift+Up/Down，上/下移一行Shift+F6，重构 - 重命名Ctrl+X，删除行Ctrl+D，复制行Ctrl+/或Ctrl+Shift+/，注释（//或者/**/）Ctrl+J，自动代码（例如：serr）Ctrl+Alt+J，用动态模板环绕Ctrl+H，显示类结构图（类的继承层次）Ctrl+Q，显示注释文档Alt+F1，查找代码所在位置Alt+1，快速打开或隐藏工程面板Ctrl+Alt+left/right，返回至上次浏览的位置Alt+left/right，切换代码视图Alt+Up/Down，在方法间快速移动定位Ctrl+Shift+Up/Down，向上/下移动语句F2 或 Shift+F2，高亮错误或警告快速定位Tab，代码标签输入完成后，按 Tab，生成代码Ctrl+Shift+F7，高亮显示所有该文本，按 Esc 高亮消失Alt+F3，逐个往下查找相同文本，并高亮显示Ctrl+Up/Down，光标中转到第一行或最后一行下Ctrl+B/Ctrl+Click，快速打开光标处的类或方法（跳转到定义处）Ctrl+Alt+B，跳转到方法实现处Ctrl+Shift+Backspace，跳转到上次编辑的地方Ctrl+O，重写方法Ctrl+Alt+Space，类名自动完成Ctrl+Alt+Up/Down，快速跳转搜索结果Ctrl+Shift+J，整合两行Alt+F8，计算变量值Ctrl+Shift+V，可以将最近使用的剪贴板内容选择插入到文本Ctrl+Alt+Shift+V，简单粘贴Shift+Esc，不仅可以把焦点移到编辑器上，而且还可以隐藏当前（或最后活动的）工具窗口F12，把焦点从编辑器移到最近使用的工具窗口Shift+F1，要打开编辑器光标字符处使用的类或者方法 Java 文档的浏览器Ctrl+W，可以选择单词继而语句继而行继而函数Ctrl+Shift+W，取消选择光标所在词Alt+F7，查找整个工程中使用地某一个类、方法或者变量的位置Ctrl+I，实现方法Ctrl+Shift+U，大小写转化Ctrl+Y，删除当前行Shift+Enter，向下插入新行psvm/sout，main/System.out.println(); Ctrl+J，查看更多Ctrl+Shift+F，全局查找Ctrl+F，查找/Shift+F3，向上查找/F3，向下查找Ctrl+Shift+S，高级搜索Ctrl+U，转到父类Ctrl+Alt+S，打开设置对话框Alt+Shift+Inert，开启/关闭列选择模式Ctrl+Alt+Shift+S，打开当前项目/模块属性Ctrl+G，定位行Alt+Home，跳转到导航栏Ctrl+Enter，上插一行Ctrl+Backspace，按单词删除Ctrl+&quot;+/-&quot;，当前方法展开、折叠Ctrl+Shift+&quot;+/-&quot;，全部展开、折叠</code></pre><p>【调试部分、编译】</p><pre><code>Ctrl+F2，停止Alt+Shift+F9，选择 DebugAlt+Shift+F10，选择 RunCtrl+Shift+F9，编译Ctrl+Shift+F10，运行Ctrl+Shift+F8，查看断点F8，步过F7，步入Shift+F7，智能步入Shift+F8，步出Alt+Shift+F8，强制步过Alt+Shift+F7，强制步入Alt+F9，运行至光标处Ctrl+Alt+F9，强制运行至光标处F9，恢复程序Alt+F10，定位到断点Ctrl+F8，切换行断点Ctrl+F9，生成项目Alt+1，项目Alt+2，收藏Alt+6，TODOAlt+7，结构Ctrl+Shift+C，复制路径Ctrl+Alt+Shift+C，复制引用，必须选择类名Ctrl+Alt+Y，同步Ctrl+~，快速切换方案（界面外观、代码风格、快捷键映射等菜单）Shift+F12，还原默认布局Ctrl+Shift+F12，隐藏/恢复所有窗口Ctrl+F4，关闭Ctrl+Shift+F4，关闭活动选项卡Ctrl+Tab，转到下一个拆分器Ctrl+Shift+Tab，转到上一个拆分器</code></pre><p>【重构】</p><pre><code>Ctrl+Alt+Shift+T，弹出重构菜单Shift+F6，重命名F6，移动F5，复制Alt+Delete，安全删除Ctrl+Alt+N，内联</code></pre><p>【查找】</p><pre><code>Ctrl+F，查找Ctrl+R，替换F3，查找下一个Shift+F3，查找上一个Ctrl+Shift+F，在路径中查找Ctrl+Shift+R，在路径中替换Ctrl+Shift+S，搜索结构Ctrl+Shift+M，替换结构Alt+F7，查找用法Ctrl+Alt+F7，显示用法Ctrl+F7，在文件中查找用法Ctrl+Shift+F7，在文件中高亮显示用法</code></pre><p>【VCS】</p><pre><code>Alt+~，VCS 操作菜单Ctrl+K，提交更改Ctrl+T，更新项目Ctrl+Alt+Shift+D，显示变化</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; IDEA快捷键：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;IDEA快捷键&lt;br&gt;
    
    </summary>
    
      <category term="tool" scheme="http://yoursite.com/categories/tool/"/>
    
    
      <category term="IDEA" scheme="http://yoursite.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Excel</title>
    <link href="http://yoursite.com/2017/10/30/excel/"/>
    <id>http://yoursite.com/2017/10/30/excel/</id>
    <published>2017-10-30T14:35:37.000Z</published>
    <updated>2018-09-20T05:51:58.324Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Excel：</strong> <excerpt in="" index="" |="" 首页摘要=""><br>Excel<br><a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><pre><code>性别:IF(MOD(B9,17,1),2)=1,&quot;男&quot;,&quot;女&quot;)生日:TEXT(MOD(B9,7,8),&quot;0000-00-00&quot;)</code></pre></the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Excel：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;br&gt;Excel&lt;br&gt;
    
    </summary>
    
      <category term="assist" scheme="http://yoursite.com/categories/assist/"/>
    
    
      <category term="Excel" scheme="http://yoursite.com/tags/Excel/"/>
    
  </entry>
  
</feed>
